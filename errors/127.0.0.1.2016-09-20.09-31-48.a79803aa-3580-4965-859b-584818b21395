(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Location'"
p3
sS'layer'
p4
S'/home/nyeinchan/web2py/applications/monitor/models/dbsetup.py'
p5
sS'code'
p6
S"from datetime import datetime\n\n## brand\ndb.define_table('brand',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat='%(name)s'\n)\n## model\ndb.define_table('model',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('brand', 'reference brand', requires=[ IS_IN_DB(db, db.brand.id, '%(name)s'), IS_NOT_EMPTY() ]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False))\n\n\n## config group\ndb.define_table('config_group',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('is_active', 'boolean', default=True),\n\tformat='%(name)s'\n)\n\n## config\ndb.define_table('general_table',\n\tField('code', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('config_type', 'reference config_group', requires=[IS_IN_DB(db, db.config_group.id, '%(name)s'), IS_NOT_EMPTY()]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat='%(name)s'\n)\n\n\n## Room\ndb.define_table('room',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('config', 'reference general_table', requires=[ IS_IN_DB(db(db.general_table.config_type == 'Location' ).select(), db.general_table.id, '%(name)s'), IS_NOT_EMPTY() ]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat='%(name)s'\n)\n\n## apps\ndb.define_table('apps',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False))\n\n## employee\ndb.define_table('employee',\n\tField('name', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('job_title', 'string'),\n\tField('department', 'string'),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat='%(name)s')\n\n##sim\ndb.define_table('sim',\n\tField('sim_number', 'string', requires=[IS_NOT_EMPTY()]),\n\tField('brand_type', 'reference config_group', requires=[IS_IN_DB(db, db.config_group.id, '%(name)s'), IS_NOT_EMPTY()]),\n\tField('plan_type', 'reference config_group', requires=[IS_IN_DB(db, db.config_group.id, '%(name)s'), IS_NOT_EMPTY()]),\n\tField('is_active', 'boolean', default=True),\n\tField('created_on', 'datetime', default=request.now,\n\t\t\treadable=True, writable=False),\n\tField('created_by', 'reference auth_user', default=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tField('modified_on', 'datetime', update=request.now,\n\t\t\treadable=True, writable=False),\n\tField('modified_by', 'reference auth_user', update=auth.user_id,\n\t\t\treadable=True, writable=False),\n\tformat='%(name)s'\n)\n\n## default user root\nif db(db.auth_user).count() <1:\n\tdb.auth_group.bulk_insert([\n\t\tdict(role='Admin', description='System user'),\n\t\tdict(role='Manager', description='Manager'),\n\t\tdict(role='User', description='User')\n\t])\n\n\tdb.auth_user.bulk_insert([\n\t\tdict(\n\t\t\tfirst_name='System',\n\t\t\tlast_name='Admin',\n\t\t\temail='root@coca-cola.com.mm',\n\t\t\tpassword=db.auth_user.password.validate('C0ke@12345')[0]\n\t\t),\n\t\tdict(\n\t\t\tfirst_name='Nyein',\n\t\t\tlast_name='Chan',\n\t\t\temail='nyeinchan@coca-cola.com.mm',\n\t\t\tpassword=db.auth_user.password.validate('Basn4@C01')[0]\n\t\t)\n\t])\n\n\tauth.add_membership(user_id=1, group_id=1)\n\tauth.add_membership(user_id=2, group_id=1)\n\nif db(db.config_group).count() < 1:\n\tdb.config_group.bulk_insert([\n\t\tdict(name='Device'),\n\t\tdict(name='Email'),\n\t\tdict(name='Location'),\n\t\tdict(name='Operator'),\n\t\tdict(name='Plan')\n\t])\n"
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/nyeinchan/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/nyeinchan/web2py/applications/monitor/models/dbsetup.py", line 60, in <module>\n    Field(\'config\', \'reference general_table\', requires=[ IS_IN_DB(db(db.general_table.config_type == \'Location\' ).select(), db.general_table.id, \'%(name)s\'), IS_NOT_EMPTY() ]),\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "/home/nyeinchan/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1442, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'Location\'\n'
p11
s.